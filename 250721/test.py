# end 설정 시 \n 으로 줄바꿈 되던 것을 임의로 변경할 수 있다.
# 문자열 ','로 연결 시, 이어서 붙이기 가능.

# -------------------------------------------------------------------------------
# print("hello", "world")
# print("hello", end=" ")
# print("world!")
# print("hello")
# -------------------------------------------------------------------------------


# 변수   할당연산자    값
# 변수 저장 x --> 변수 할당 o
#

# -------------------------------------------------------------------------------
# degree = 36.5
# print(id(degree))
# degree = 36.6
# print(id(degree))
# -------------------------------------------------------------------------------


# 변수명 규칙 : 숫자로 시작할 수 없다.
# 언더스코어 가능 _
# 키워드 사용 불가능 (if, for)
# 내장함수나 메서드 가급적 사용 하지 않는다. -> 에러 발생
#   -> ex) sum = 7 사용시 이 이후부터 sum()은 사용할 수가 없어진다.
#   -> 키워드는 작성 시부터 에러가 발생하는데 내장함수느 메서드는 작성 시에 에러가 발생하지 않는다.
# 대소문자는 서로 다른 유니코드 값을 가지고 있다. -> ASCII CODE -> ord()

# -------------------------------------------------------------------------------
# seungchan20 = 20
# _seungchan = 20

# lst = [1, 2, 3]
# sum = 7
# # print(sum(lst))

# list = [1, 2, 3, 4]
# # arr = list((1, 2, 3, 4))
# # print(arr)

# print(ord("A"))
# print(ord("a"))
# -------------------------------------------------------------------------------


# 정수(int) : 음의 정수, 양의 정수, 0
# (int)2하고 (float)2.0은 같은데 데이터 타입은 다르다. -> print(a == b) 출력결과 : True
# -------------------------------------------------------------------------------
# a = 2
# b = 2.0
# c = 3 + 2j
# d = "1"


# print(type(a))
# print(type(b))
# print(type(c))
# print(type(d))
# print(a == b)
# -------------------------------------------------------------------------------


# 1억을 지수표현법으로
# -------------------------------------------------------------------------------
# num = 1e8
# print(num)
# -------------------------------------------------------------------------------


# 연산자 우선순위
# (-) 음수 기호보다 (**) 거듭제곱이 우선순위가 높다.

# -------------------------------------------------------------------------------
# num = -(2**2)
# print(num)
# -------------------------------------------------------------------------------


# space 도 ASCII CODE가 있다 -> 인덱스에 존재한다.
# -------------------------------------------------------------------------------
# char = "hello world"
# space = " "
# print(ord(space))

# print("'안녕\"하\"세요'")
# -------------------------------------------------------------------------------


# 소수점 자리 수 표현 : (:.nf)
# -------------------------------------------------------------------------------
name = "박승찬"
age = 20
height = 200.56

print(f"이름은 {name}, 나이는 {age}살, 키는 {height:.1f}입니다.")
# -------------------------------------------------------------------------------


# char[start:end:step]
#   1. step이 양수
#       -> start 부터 end - 1 까지
#   2. step이 음수
#       -> start 부터 end + 1 까지

# 핵심 point : 항상 end를 포함하지 않는다.
# -------------------------------------------------------------------------------
